#include <math.h>
void diffeqf(double* du, const double* RHS1, const double* RHS2, const double* RHS3, const double* RHS4, const double* RHS5, const double* RHS6, const double RHS7) {
  du[0] = 0;
  du[1] = 0;
  du[2] = 0;
  du[3] = 0;
  du[4] = 0;
  du[5] = 0;
  du[6] = 0;
  du[7] = 0;
  du[8] = 0;
  du[9] = 0;
  du[10] = 0;
  du[11] = 0;
  du[12] = ((-1/3 * (((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2] + -1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1]) * RHS4[0] + (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + 2 * pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) + -2 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[3] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -2/3 * pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * RHS5[0] + 2/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * RHS5[0] + -2 * pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * RHS6[1] + 2 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * RHS6[1]) * var"Differential(t)"(RHS1[0])) / (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0]) + -1 * (1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2/3 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * (((-1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * sin(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + -1/3 * (((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS5[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[3] + -2/3 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + -2 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * var"Differential(t)"(RHS1[0])) / pow(pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0], 2)) + -1 * (1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2/3 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * (RHS3[0] / pow(pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0], 2));
  du[13] = (((-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0])) * RHS6[2] + (-2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1]) * RHS4[0] + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1]) * RHS4[0] + (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + -1 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + -1/3 * (((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2]) * var"Differential(t)"(RHS1[1]) + 0.5 * ((2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * ((2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + 2 * pow(-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1])) * RHS6[2] + (2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + 2 * pow(-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + 2 * pow(-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + 2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * (1/3 * (2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + -2 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2] + 2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + 2 * pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2/3 * pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0] + 2 * pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + -2/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0] + -2 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1]) * pow(var"Differential(t)"(RHS1[0]), 2) + -1 * RHS7 * (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1/2 * RHS7 * (-2 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1 * RHS7 * (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1/2 * RHS7 * (-1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * cos(RHS1[1]) * RHS4[0] + -2 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[3] + 3/2 * RHS7 * cos(RHS1[1]) * RHS4[0] * RHS6[1]) / ((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2]) + -1 * ((2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1])) * RHS6[2] + (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2]) * ((((-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS6[2] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * sin(RHS1[1]) * RHS4[0] + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + -1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS5[2]) * var"Differential(t)"(RHS1[1]) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * (1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2/3 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * pow(var"Differential(t)"(RHS1[0]), 2) + 0.5 * ((2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1])) * RHS6[2] + (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + -1/2 * RHS7 * (-2 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1 * RHS7 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1 * RHS7 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1/2 * RHS7 * (-2 * sin(RHS1[1]) * RHS4[0] + -2 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 3/2 * RHS7 * sin(RHS1[1]) * RHS4[0] * RHS6[1]) / pow((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2], 2)) + -1 * ((2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1])) * RHS6[2] + (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2]) * (RHS3[1] / pow((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2], 2));
  du[14] = (((-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[2]) + 0.5 * ((-2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (-2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * ((2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * (1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * pow(var"Differential(t)"(RHS1[0]), 2) + -1/2 * RHS7 * (-1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[3] + -1 * RHS7 * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 3/2 * RHS7 * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) / ((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) + -1 * ((((-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[2]) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 1/3 * (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * (1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * pow(var"Differential(t)"(RHS1[0]), 2) + -1/2 * RHS7 * (-2 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1 * RHS7 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 3/2 * RHS7 * sin(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) / pow((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2], 2)) * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) + -1 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * (RHS3[2] / pow((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2], 2));
  du[15] = (0.5 * ((-2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (-2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * ((-2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * (1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) * pow(var"Differential(t)"(RHS1[0]), 2) + 3/2 * RHS7 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) / ((pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS5[2]);
  du[16] = 0;
  du[17] = 0;
  du[18] = 0;
  du[19] = 0;
  du[20] = ((-1/3 * (2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + -1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + -2 * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[3] + -2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * var"Differential(t)"(RHS1[0])) / (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0]) + -1 * (1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * (((-1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * sin(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + -1/3 * (((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS5[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[3] + -2/3 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + -2 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * var"Differential(t)"(RHS1[0])) / pow(pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0], 2)) + -1 * (1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * (RHS3[0] / pow(pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0], 2));
  du[21] = (((-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + -2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + -2 * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + (2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1/3 * (-2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1] + cos(RHS1[1] + RHS1[2]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] * RHS4[1] + sin(RHS1[1] + RHS1[2]) * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + -1/3 * ((cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[1]) + 0.5 * ((-2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (-2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * ((2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * (1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * pow(var"Differential(t)"(RHS1[0]), 2) + -1/2 * RHS7 * (-1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[3] + -1 * RHS7 * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 3/2 * RHS7 * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) / ((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2]) + -1 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 1/3 * (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * ((((-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS6[2] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * sin(RHS1[1]) * RHS4[0] + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + -1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS5[2]) * var"Differential(t)"(RHS1[1]) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * (1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2/3 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * pow(var"Differential(t)"(RHS1[0]), 2) + 0.5 * ((2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1])) * RHS6[2] + (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + -1/2 * RHS7 * (-2 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1 * RHS7 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1 * RHS7 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1/2 * RHS7 * (-2 * sin(RHS1[1]) * RHS4[0] + -2 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 3/2 * RHS7 * sin(RHS1[1]) * RHS4[0] * RHS6[1]) / pow((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2], 2)) + -1 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 1/3 * (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * (RHS3[1] / pow((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2], 2));
  du[22] = (((-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[2]) + 0.5 * ((2 * pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + 2 * pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + (2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + 2 * pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * (2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + 2 * pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * ((2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * pow(-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * (1/3 * (2 * pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * (2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + 2 * pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) * RHS6[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * pow(var"Differential(t)"(RHS1[0]), 2) + -1/2 * RHS7 * (-1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[3] + -1 * RHS7 * (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 3/2 * RHS7 * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) / ((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) + -1 * ((((-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[2]) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 1/3 * (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * (1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * pow(var"Differential(t)"(RHS1[0]), 2) + -1/2 * RHS7 * (-2 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1 * RHS7 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 3/2 * RHS7 * sin(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) / pow((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2], 2)) * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) + -1 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * (RHS3[2] / pow((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2], 2));
  du[23] = (0.5 * ((-2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (-2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * (1/3 * (-1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + cos(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) * pow(var"Differential(t)"(RHS1[0]), 2) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * ((-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + cos(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + sin(RHS1[1] + RHS1[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 3/2 * RHS7 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) / ((pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS5[2]);
  du[24] = 0;
  du[25] = 0;
  du[26] = 0;
  du[27] = 0;
  du[28] = ((-1/3 * (((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2] + -2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) * var"Differential(t)"(RHS1[0])) / (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0]) + -1 * (((-1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * sin(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + -1/3 * (((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS5[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[3] + -2/3 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + -2 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * var"Differential(t)"(RHS1[0])) / pow(pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0], 2)) * (1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) + -1 * (1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) * (RHS3[0] / pow(pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0], 2));
  du[29] = (((2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1/3 * (((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * var"Differential(t)"(RHS1[1]) + 0.5 * ((-2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (-1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * ((-2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (-2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * (1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) * pow(var"Differential(t)"(RHS1[0]), 2) + 3/2 * RHS7 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) / ((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2]) + -1 * ((((-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS6[2] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * sin(RHS1[1]) * RHS4[0] + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + -1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS5[2]) * var"Differential(t)"(RHS1[1]) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * (1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2/3 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * pow(var"Differential(t)"(RHS1[0]), 2) + 0.5 * ((2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1])) * RHS6[2] + (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + -1/2 * RHS7 * (-2 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1 * RHS7 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1 * RHS7 * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1/2 * RHS7 * (-2 * sin(RHS1[1]) * RHS4[0] + -2 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 3/2 * RHS7 * sin(RHS1[1]) * RHS4[0] * RHS6[1]) / pow((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2], 2)) * ((-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) + -1 * ((-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * (RHS3[1] / pow((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2], 2));
  du[30] = (((2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1/3 * (-2 * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + -1 * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2]) * var"Differential(t)"(RHS1[2]) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + cos(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + sin(RHS1[1] + RHS1[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * ((-2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (-2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * (1/3 * (-1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + cos(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) * pow(var"Differential(t)"(RHS1[0]), 2) + 3/2 * RHS7 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) / ((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) + -1 * ((((-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[2]) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * ((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 1/3 * (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * (1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * pow(var"Differential(t)"(RHS1[0]), 2) + -1/2 * RHS7 * (-2 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1 * RHS7 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 3/2 * RHS7 * sin(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) / pow((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2], 2)) * ((2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + sin(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + -1 * cos(RHS1[1] + RHS1[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2]) + -1 * ((2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + sin(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + -1 * cos(RHS1[1] + RHS1[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2]) * (RHS3[2] / pow((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2], 2));
  du[31] = (0.5 * ((2 * pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + 2 * pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (2 * pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + 2 * pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * cos(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + -1 * sin(RHS1[1] + RHS1[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[2]), 2) + 0.5 * ((2 * pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + 2 * pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (2 * pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + 2 * pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * pow(var"Differential(t)"(RHS1[1]), 2) + 0.5 * (1/3 * (2 * pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + -1 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2] + 2 * pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) * RHS6[3] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) * pow(var"Differential(t)"(RHS1[0]), 2) + 3/2 * RHS7 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) / ((pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS5[2]);
  du[32] = 1;
  du[33] = 0;
  du[34] = 0;
  du[35] = 0;
  du[36] = (-1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * sin(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + -1/3 * (((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS5[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * RHS6[3] + -2/3 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + -2 * pow(RHS4[0], 2) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) / (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0]);
  du[37] = ((1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2/3 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * var"Differential(t)"(RHS1[0])) / ((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2]);
  du[38] = ((1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * var"Differential(t)"(RHS1[0])) / ((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]);
  du[39] = ((1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) * var"Differential(t)"(RHS1[0])) / ((pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS5[2]);
  du[40] = 0;
  du[41] = 1;
  du[42] = 0;
  du[43] = 0;
  du[44] = ((-1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2] + -1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + 2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1])) * RHS5[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -2/3 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS5[0] + -2 * pow(RHS4[0], 2) * cos(RHS1[1]) * sin(RHS1[1]) * RHS6[1]) * var"Differential(t)"(RHS1[0])) / (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0]);
  du[45] = ((-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS6[2] + ((2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1])) * RHS6[2] + (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2]) * var"Differential(t)"(RHS1[1]) + ((-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1])) * RHS6[2] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0] + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0]) * RHS5[1] + -1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1]) * RHS4[0] + -1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS5[2]) * var"Differential(t)"(RHS1[1]) + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * sin(RHS1[1]) * RHS4[0] + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + -1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * var"Differential(t)"(RHS1[1]) * sin(RHS1[1]) * RHS4[0]) + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + var"Differential(t)"(RHS1[1]) * cos(RHS1[1]) * RHS4[0])) * RHS5[2]) / ((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2]);
  du[46] = (((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + 1/3 * (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + 1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[1]) + ((-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[2])) / ((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]);
  du[47] = (((-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + (-1 * cos(RHS1[1]) * RHS4[0] + -1 * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * var"Differential(t)"(RHS1[1])) / ((pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS5[2]);
  du[48] = 0;
  du[49] = 0;
  du[50] = 1;
  du[51] = 0;
  du[52] = ((-1/3 * (2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + -1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] * RHS6[2]) * var"Differential(t)"(RHS1[0])) / (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0]);
  du[53] = (((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[2]) + ((-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + (2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS6[2] + -1/3 * (-2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2]) * sin(RHS1[1]) * RHS4[0] * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2]) * cos(RHS1[1]) * RHS4[0] * RHS4[1]) * RHS5[1] + -1/3 * ((cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[1])) / ((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2]);
  du[54] = (((2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + 1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[2]) + ((-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * sin(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) * var"Differential(t)"(RHS1[2]) + (-2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + -2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2])) * RHS6[3] + -1/3 * (2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + 2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + ((-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * var"Differential(t)"(RHS1[1]) + -1 * var"Differential(t)"(RHS1[2]) + -1 * var"Differential(t)"(RHS1[3])) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + ((var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2]) + var"Differential(t)"(RHS1[3])) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (-1 * cos(RHS1[1] + RHS1[2]) * RHS4[1] + -1 * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * (var"Differential(t)"(RHS1[1]) + var"Differential(t)"(RHS1[2])) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]) / ((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]);
  du[55] = (((2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + 1/3 * (2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + sin(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + -1 * cos(RHS1[1] + RHS1[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2]) * var"Differential(t)"(RHS1[2])) / ((pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2] + RHS1[3]), 2) * pow(RHS4[2], 2)) * RHS5[2]);
  du[56] = 0;
  du[57] = 0;
  du[58] = 0;
  du[59] = 1;
  du[60] = ((-1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] * RHS6[3]) * var"Differential(t)"(RHS1[0])) / (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) * RHS6[2] + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) * RHS6[3] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2] + 1/3 * (pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS6[1] + 1/3 * pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) * RHS5[0]);
  du[61] = (((2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1/3 * ((sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -1 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS5[2]) * var"Differential(t)"(RHS1[1])) / ((pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS6[1] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2)) * RHS6[2] + (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + 1/3 * (pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2)) * RHS5[0] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + pow(cos(RHS1[1]), 2) * pow(RHS4[0], 2) + pow(sin(RHS1[1]), 2) * pow(RHS4[0], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * cos(RHS1[1]) * RHS4[0] + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * sin(RHS1[1]) * RHS4[0]) * RHS5[1] + 1/3 * (pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1]) * (cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1], 2) + (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1]) * (sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) + pow(cos(RHS1[1]) * RHS4[0] + cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1]) * RHS4[0] + sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS5[2]);
  du[62] = (((-2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + 2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * RHS6[3] + -1/3 * (2 * (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + -2 * (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2] + sin(RHS1[1] + RHS1[2]) * cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2] + -1 * cos(RHS1[1] + RHS1[2]) * sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[1] * RHS4[2]) * RHS5[2]) * var"Differential(t)"(RHS1[2])) / ((pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2)) * RHS6[3] + (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS6[2] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2)) * RHS5[1] + 1/3 * (pow(cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2], 2) + pow(cos(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + pow(sin(RHS1[1] + RHS1[2]), 2) * pow(RHS4[1], 2) + (cos(RHS1[1] + RHS1[2]) * RHS4[1] + cos(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * cos(RHS1[1] + RHS1[2]) * RHS4[1] + (sin(RHS1[1] + RHS1[2]) * RHS4[1] + sin(RHS1[1] + RHS1[2] + RHS1[3]) * RHS4[2]) * sin(RHS1[1] + RHS1[2]) * RHS4[1]) * RHS5[2]);
  du[63] = 0;
}
